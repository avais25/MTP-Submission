from z3 import *
input_t1_0 = Real('input_t1_0')
input_t1_1 = Real('input_t1_1')
t1_0 = Real('t1_0')
t1_1 = Real('t1_1')
input_t2_0 = Real('input_t2_0')
input_t2_1 = Real('input_t2_1')
input_t2_2 = Real('input_t2_2')
t2_0 = Real('t2_0')
t2_1 = Real('t2_1')
t2_2 = Real('t2_2')
actuation_0 = Real('actuation_0')
actuation_1 = Real('actuation_1')
s = Solver()
s.add(actuation_0 >= 5.0)
s.add(actuation_0 + 1.0 <= 6.0)
s.add(actuation_1 >= 11.0)
s.add(actuation_1 + 1.0 <= 12.0)
s.add()
s.add(input_t2_0 >= 0.0)
s.add(input_t2_0 + 0.5 <= 1.0)
s.add(input_t2_1 >= 4.0)
s.add(input_t2_1 + 0.5 <= 5.0)
s.add(input_t2_2 >= 8.0)
s.add(input_t2_2 + 0.5 <= 9.0)
s.add()
s.add(input_t1_0 + 0.25 <= t1_0)
s.add(t1_0 + 0.25 <= input_t1_1)
s.add(input_t1_1 + 0.25 <= t1_1)
s.add(input_t2_0 + 0.5 <= t2_0)
s.add(t2_0 + 1.0 <= input_t2_1)
s.add(input_t2_1 + 0.5 <= t2_1)
s.add(t2_1 + 1.0 <= input_t2_2)
s.add(input_t2_2 + 0.5 <= t2_2)
s.add()
s.add(t1_0 < t1_1)
s.add(input_t1_0 < input_t1_1)
s.add(t2_0 < t2_1)
s.add(input_t2_0 < input_t2_1)
s.add(t2_1 < t2_2)
s.add(input_t2_1 < input_t2_2)
s.add(actuation_0 < actuation_1)
s.add()
s.add(t1_0 + 0.25 <= actuation_0)
s.add(t1_1 >= actuation_0 + 1.0)
s.add(t1_1 + 0.25 <= actuation_1)
s.add()
s.add(t2_0 + 1.0 <= input_t1_1)
s.add(t2_1 >= input_t1_1 + 0.25)
s.add(input_t1_0 + 0.25 <= t2_0)
s.add()
s.add(Or(input_t1_0 + 0.25 <= input_t1_1 , input_t1_1 + 0.25 <= input_t1_0))
s.add(Or(input_t1_0 + 0.25 <= t1_0 , t1_0 + 0.25 <= input_t1_0))
s.add(Or(input_t1_0 + 0.25 <= t1_1 , t1_1 + 0.25 <= input_t1_0))
s.add(Or(input_t1_0 + 0.25 <= input_t2_0 , input_t2_0 + 0.5 <= input_t1_0))
s.add(Or(input_t1_0 + 0.25 <= input_t2_1 , input_t2_1 + 0.5 <= input_t1_0))
s.add(Or(input_t1_0 + 0.25 <= input_t2_2 , input_t2_2 + 0.5 <= input_t1_0))
s.add(Or(input_t1_0 + 0.25 <= t2_0 , t2_0 + 1 <= input_t1_0))
s.add(Or(input_t1_0 + 0.25 <= t2_1 , t2_1 + 1 <= input_t1_0))
s.add(Or(input_t1_0 + 0.25 <= t2_2 , t2_2 + 1 <= input_t1_0))
s.add(Or(input_t1_0 + 0.25 <= actuation_0 , actuation_0 + 1 <= input_t1_0))
s.add(Or(input_t1_0 + 0.25 <= actuation_1 , actuation_1 + 1 <= input_t1_0))
s.add(Or(input_t1_1 + 0.25 <= input_t1_0 , input_t1_0 + 0.25 <= input_t1_1))
s.add(Or(input_t1_1 + 0.25 <= t1_0 , t1_0 + 0.25 <= input_t1_1))
s.add(Or(input_t1_1 + 0.25 <= t1_1 , t1_1 + 0.25 <= input_t1_1))
s.add(Or(input_t1_1 + 0.25 <= input_t2_0 , input_t2_0 + 0.5 <= input_t1_1))
s.add(Or(input_t1_1 + 0.25 <= input_t2_1 , input_t2_1 + 0.5 <= input_t1_1))
s.add(Or(input_t1_1 + 0.25 <= input_t2_2 , input_t2_2 + 0.5 <= input_t1_1))
s.add(Or(input_t1_1 + 0.25 <= t2_0 , t2_0 + 1 <= input_t1_1))
s.add(Or(input_t1_1 + 0.25 <= t2_1 , t2_1 + 1 <= input_t1_1))
s.add(Or(input_t1_1 + 0.25 <= t2_2 , t2_2 + 1 <= input_t1_1))
s.add(Or(input_t1_1 + 0.25 <= actuation_0 , actuation_0 + 1 <= input_t1_1))
s.add(Or(input_t1_1 + 0.25 <= actuation_1 , actuation_1 + 1 <= input_t1_1))
s.add(Or(t1_0 + 0.25 <= input_t1_0 , input_t1_0 + 0.25 <= t1_0))
s.add(Or(t1_0 + 0.25 <= input_t1_1 , input_t1_1 + 0.25 <= t1_0))
s.add(Or(t1_0 + 0.25 <= t1_1 , t1_1 + 0.25 <= t1_0))
s.add(Or(t1_0 + 0.25 <= input_t2_0 , input_t2_0 + 0.5 <= t1_0))
s.add(Or(t1_0 + 0.25 <= input_t2_1 , input_t2_1 + 0.5 <= t1_0))
s.add(Or(t1_0 + 0.25 <= input_t2_2 , input_t2_2 + 0.5 <= t1_0))
s.add(Or(t1_0 + 0.25 <= t2_0 , t2_0 + 1 <= t1_0))
s.add(Or(t1_0 + 0.25 <= t2_1 , t2_1 + 1 <= t1_0))
s.add(Or(t1_0 + 0.25 <= t2_2 , t2_2 + 1 <= t1_0))
s.add(Or(t1_0 + 0.25 <= actuation_0 , actuation_0 + 1 <= t1_0))
s.add(Or(t1_0 + 0.25 <= actuation_1 , actuation_1 + 1 <= t1_0))
s.add(Or(t1_1 + 0.25 <= input_t1_0 , input_t1_0 + 0.25 <= t1_1))
s.add(Or(t1_1 + 0.25 <= input_t1_1 , input_t1_1 + 0.25 <= t1_1))
s.add(Or(t1_1 + 0.25 <= t1_0 , t1_0 + 0.25 <= t1_1))
s.add(Or(t1_1 + 0.25 <= input_t2_0 , input_t2_0 + 0.5 <= t1_1))
s.add(Or(t1_1 + 0.25 <= input_t2_1 , input_t2_1 + 0.5 <= t1_1))
s.add(Or(t1_1 + 0.25 <= input_t2_2 , input_t2_2 + 0.5 <= t1_1))
s.add(Or(t1_1 + 0.25 <= t2_0 , t2_0 + 1 <= t1_1))
s.add(Or(t1_1 + 0.25 <= t2_1 , t2_1 + 1 <= t1_1))
s.add(Or(t1_1 + 0.25 <= t2_2 , t2_2 + 1 <= t1_1))
s.add(Or(t1_1 + 0.25 <= actuation_0 , actuation_0 + 1 <= t1_1))
s.add(Or(t1_1 + 0.25 <= actuation_1 , actuation_1 + 1 <= t1_1))
s.add(Or(input_t2_0 + 0.5 <= input_t1_0 , input_t1_0 + 0.25 <= input_t2_0))
s.add(Or(input_t2_0 + 0.5 <= input_t1_1 , input_t1_1 + 0.25 <= input_t2_0))
s.add(Or(input_t2_0 + 0.5 <= t1_0 , t1_0 + 0.25 <= input_t2_0))
s.add(Or(input_t2_0 + 0.5 <= t1_1 , t1_1 + 0.25 <= input_t2_0))
s.add(Or(input_t2_0 + 0.5 <= input_t2_1 , input_t2_1 + 0.5 <= input_t2_0))
s.add(Or(input_t2_0 + 0.5 <= input_t2_2 , input_t2_2 + 0.5 <= input_t2_0))
s.add(Or(input_t2_0 + 0.5 <= t2_0 , t2_0 + 1 <= input_t2_0))
s.add(Or(input_t2_0 + 0.5 <= t2_1 , t2_1 + 1 <= input_t2_0))
s.add(Or(input_t2_0 + 0.5 <= t2_2 , t2_2 + 1 <= input_t2_0))
s.add(Or(input_t2_0 + 0.5 <= actuation_0 , actuation_0 + 1 <= input_t2_0))
s.add(Or(input_t2_0 + 0.5 <= actuation_1 , actuation_1 + 1 <= input_t2_0))
s.add(Or(input_t2_1 + 0.5 <= input_t1_0 , input_t1_0 + 0.25 <= input_t2_1))
s.add(Or(input_t2_1 + 0.5 <= input_t1_1 , input_t1_1 + 0.25 <= input_t2_1))
s.add(Or(input_t2_1 + 0.5 <= t1_0 , t1_0 + 0.25 <= input_t2_1))
s.add(Or(input_t2_1 + 0.5 <= t1_1 , t1_1 + 0.25 <= input_t2_1))
s.add(Or(input_t2_1 + 0.5 <= input_t2_0 , input_t2_0 + 0.5 <= input_t2_1))
s.add(Or(input_t2_1 + 0.5 <= input_t2_2 , input_t2_2 + 0.5 <= input_t2_1))
s.add(Or(input_t2_1 + 0.5 <= t2_0 , t2_0 + 1 <= input_t2_1))
s.add(Or(input_t2_1 + 0.5 <= t2_1 , t2_1 + 1 <= input_t2_1))
s.add(Or(input_t2_1 + 0.5 <= t2_2 , t2_2 + 1 <= input_t2_1))
s.add(Or(input_t2_1 + 0.5 <= actuation_0 , actuation_0 + 1 <= input_t2_1))
s.add(Or(input_t2_1 + 0.5 <= actuation_1 , actuation_1 + 1 <= input_t2_1))
s.add(Or(input_t2_2 + 0.5 <= input_t1_0 , input_t1_0 + 0.25 <= input_t2_2))
s.add(Or(input_t2_2 + 0.5 <= input_t1_1 , input_t1_1 + 0.25 <= input_t2_2))
s.add(Or(input_t2_2 + 0.5 <= t1_0 , t1_0 + 0.25 <= input_t2_2))
s.add(Or(input_t2_2 + 0.5 <= t1_1 , t1_1 + 0.25 <= input_t2_2))
s.add(Or(input_t2_2 + 0.5 <= input_t2_0 , input_t2_0 + 0.5 <= input_t2_2))
s.add(Or(input_t2_2 + 0.5 <= input_t2_1 , input_t2_1 + 0.5 <= input_t2_2))
s.add(Or(input_t2_2 + 0.5 <= t2_0 , t2_0 + 1 <= input_t2_2))
s.add(Or(input_t2_2 + 0.5 <= t2_1 , t2_1 + 1 <= input_t2_2))
s.add(Or(input_t2_2 + 0.5 <= t2_2 , t2_2 + 1 <= input_t2_2))
s.add(Or(input_t2_2 + 0.5 <= actuation_0 , actuation_0 + 1 <= input_t2_2))
s.add(Or(input_t2_2 + 0.5 <= actuation_1 , actuation_1 + 1 <= input_t2_2))
s.add(Or(t2_0 + 1 <= input_t1_0 , input_t1_0 + 0.25 <= t2_0))
s.add(Or(t2_0 + 1 <= input_t1_1 , input_t1_1 + 0.25 <= t2_0))
s.add(Or(t2_0 + 1 <= t1_0 , t1_0 + 0.25 <= t2_0))
s.add(Or(t2_0 + 1 <= t1_1 , t1_1 + 0.25 <= t2_0))
s.add(Or(t2_0 + 1 <= input_t2_0 , input_t2_0 + 0.5 <= t2_0))
s.add(Or(t2_0 + 1 <= input_t2_1 , input_t2_1 + 0.5 <= t2_0))
s.add(Or(t2_0 + 1 <= input_t2_2 , input_t2_2 + 0.5 <= t2_0))
s.add(Or(t2_0 + 1 <= t2_1 , t2_1 + 1 <= t2_0))
s.add(Or(t2_0 + 1 <= t2_2 , t2_2 + 1 <= t2_0))
s.add(Or(t2_0 + 1 <= actuation_0 , actuation_0 + 1 <= t2_0))
s.add(Or(t2_0 + 1 <= actuation_1 , actuation_1 + 1 <= t2_0))
s.add(Or(t2_1 + 1 <= input_t1_0 , input_t1_0 + 0.25 <= t2_1))
s.add(Or(t2_1 + 1 <= input_t1_1 , input_t1_1 + 0.25 <= t2_1))
s.add(Or(t2_1 + 1 <= t1_0 , t1_0 + 0.25 <= t2_1))
s.add(Or(t2_1 + 1 <= t1_1 , t1_1 + 0.25 <= t2_1))
s.add(Or(t2_1 + 1 <= input_t2_0 , input_t2_0 + 0.5 <= t2_1))
s.add(Or(t2_1 + 1 <= input_t2_1 , input_t2_1 + 0.5 <= t2_1))
s.add(Or(t2_1 + 1 <= input_t2_2 , input_t2_2 + 0.5 <= t2_1))
s.add(Or(t2_1 + 1 <= t2_0 , t2_0 + 1 <= t2_1))
s.add(Or(t2_1 + 1 <= t2_2 , t2_2 + 1 <= t2_1))
s.add(Or(t2_1 + 1 <= actuation_0 , actuation_0 + 1 <= t2_1))
s.add(Or(t2_1 + 1 <= actuation_1 , actuation_1 + 1 <= t2_1))
s.add(Or(t2_2 + 1 <= input_t1_0 , input_t1_0 + 0.25 <= t2_2))
s.add(Or(t2_2 + 1 <= input_t1_1 , input_t1_1 + 0.25 <= t2_2))
s.add(Or(t2_2 + 1 <= t1_0 , t1_0 + 0.25 <= t2_2))
s.add(Or(t2_2 + 1 <= t1_1 , t1_1 + 0.25 <= t2_2))
s.add(Or(t2_2 + 1 <= input_t2_0 , input_t2_0 + 0.5 <= t2_2))
s.add(Or(t2_2 + 1 <= input_t2_1 , input_t2_1 + 0.5 <= t2_2))
s.add(Or(t2_2 + 1 <= input_t2_2 , input_t2_2 + 0.5 <= t2_2))
s.add(Or(t2_2 + 1 <= t2_0 , t2_0 + 1 <= t2_2))
s.add(Or(t2_2 + 1 <= t2_1 , t2_1 + 1 <= t2_2))
s.add(Or(t2_2 + 1 <= actuation_0 , actuation_0 + 1 <= t2_2))
s.add(Or(t2_2 + 1 <= actuation_1 , actuation_1 + 1 <= t2_2))
s.add(Or(actuation_0 + 1 <= input_t1_0 , input_t1_0 + 0.25 <= actuation_0))
s.add(Or(actuation_0 + 1 <= input_t1_1 , input_t1_1 + 0.25 <= actuation_0))
s.add(Or(actuation_0 + 1 <= t1_0 , t1_0 + 0.25 <= actuation_0))
s.add(Or(actuation_0 + 1 <= t1_1 , t1_1 + 0.25 <= actuation_0))
s.add(Or(actuation_0 + 1 <= input_t2_0 , input_t2_0 + 0.5 <= actuation_0))
s.add(Or(actuation_0 + 1 <= input_t2_1 , input_t2_1 + 0.5 <= actuation_0))
s.add(Or(actuation_0 + 1 <= input_t2_2 , input_t2_2 + 0.5 <= actuation_0))
s.add(Or(actuation_0 + 1 <= t2_0 , t2_0 + 1 <= actuation_0))
s.add(Or(actuation_0 + 1 <= t2_1 , t2_1 + 1 <= actuation_0))
s.add(Or(actuation_0 + 1 <= t2_2 , t2_2 + 1 <= actuation_0))
s.add(Or(actuation_0 + 1 <= actuation_1 , actuation_1 + 1 <= actuation_0))
s.add(Or(actuation_1 + 1 <= input_t1_0 , input_t1_0 + 0.25 <= actuation_1))
s.add(Or(actuation_1 + 1 <= input_t1_1 , input_t1_1 + 0.25 <= actuation_1))
s.add(Or(actuation_1 + 1 <= t1_0 , t1_0 + 0.25 <= actuation_1))
s.add(Or(actuation_1 + 1 <= t1_1 , t1_1 + 0.25 <= actuation_1))
s.add(Or(actuation_1 + 1 <= input_t2_0 , input_t2_0 + 0.5 <= actuation_1))
s.add(Or(actuation_1 + 1 <= input_t2_1 , input_t2_1 + 0.5 <= actuation_1))
s.add(Or(actuation_1 + 1 <= input_t2_2 , input_t2_2 + 0.5 <= actuation_1))
s.add(Or(actuation_1 + 1 <= t2_0 , t2_0 + 1 <= actuation_1))
s.add(Or(actuation_1 + 1 <= t2_1 , t2_1 + 1 <= actuation_1))
s.add(Or(actuation_1 + 1 <= t2_2 , t2_2 + 1 <= actuation_1))
s.add(Or(actuation_1 + 1 <= actuation_0 , actuation_0 + 1 <= actuation_1))
s.add()
s.add(input_t1_0 >= 0)
s.add(input_t1_0 <= 12)
s.add(input_t1_1 >= 0)
s.add(input_t1_1 <= 12)
s.add(t1_0 >= 0)
s.add(t1_0 <= 12)
s.add(t1_1 >= 0)
s.add(t1_1 <= 12)
s.add(input_t2_0 >= 0)
s.add(input_t2_0 <= 12)
s.add(input_t2_1 >= 0)
s.add(input_t2_1 <= 12)
s.add(input_t2_2 >= 0)
s.add(input_t2_2 <= 12)
s.add(t2_0 >= 0)
s.add(t2_0 <= 12)
s.add(t2_1 >= 0)
s.add(t2_1 <= 12)
s.add(t2_2 >= 0)
s.add(t2_2 <= 12)
s.add(actuation_0 >= 0)
s.add(actuation_0 <= 12)
s.add(actuation_1 >= 0)
s.add(actuation_1 <= 12)
print(s.check())
print(s.model())
outFile = open("schedule_specification.txt", "w")
outFile.writelines(str(s.check()) + "\n")
outFile.writelines(str(s.model()))
